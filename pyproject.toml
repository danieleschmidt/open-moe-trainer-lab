[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "open-moe-trainer-lab"
version = "0.1.0"
description = "End-to-end training and visualization toolkit for Mixture of Experts (MoE) models"
readme = "README.md"
license = {file = "LICENSE"}
authors = [
    {name = "Daniel Schmidt", email = "daniel@example.com"}
]
maintainers = [
    {name = "Daniel Schmidt", email = "daniel@example.com"}
]
keywords = ["machine-learning", "deep-learning", "moe", "transformers", "pytorch", "distributed-training"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Software Development :: Libraries :: Python Modules"
]
requires-python = ">=3.9"
dependencies = [
    "torch>=2.0.0",
    "transformers>=4.30.0",
    "datasets>=2.12.0",
    "accelerate>=0.20.0",
    "numpy>=1.24.0",
    "pandas>=2.0.0",
    "matplotlib>=3.7.0",
    "seaborn>=0.12.0",
    "plotly>=5.14.0",
    "wandb>=0.15.0",
    "tensorboard>=2.13.0",
    "tqdm>=4.65.0",
    "pyyaml>=6.0",
    "click>=8.1.0",
    "rich>=13.0.0",
    "typing-extensions>=4.5.0"
]

[project.optional-dependencies]
dev = [
    "pytest>=7.3.0",
    "pytest-cov>=4.1.0",
    "pytest-xdist>=3.3.0",
    "pytest-mock>=3.11.0",
    "black>=23.3.0",
    "isort>=5.12.0",
    "pylint>=2.17.0",
    "mypy>=1.3.0",
    "pre-commit>=3.3.0",
    "sphinx>=7.0.0",
    "sphinx-rtd-theme>=1.2.0",
    "nbsphinx>=0.9.0",
    "jupyterlab>=4.0.0",
    "ipywidgets>=8.0.0",
    "safety>=2.3.0",
    "bandit>=1.7.0"
]

gpu = [
    "torch[gpu]>=2.0.0",
    "torchvision>=0.15.0",
    "torchaudio>=2.0.0"
]

distributed = [
    "deepspeed>=0.9.0",
    "fairscale>=0.4.0",
    "torch-tensorrt>=1.4.0"
]

visualization = [
    "dash>=2.10.0",
    "streamlit>=1.23.0",
    "bokeh>=3.1.0",
    "altair>=5.0.0"
]

benchmarking = [
    "scikit-learn>=1.2.0",
    "scipy>=1.10.0",
    "memory-profiler>=0.60.0",
    "psutil>=5.9.0"
]

cloud = [
    "boto3>=1.26.0",
    "google-cloud-storage>=2.9.0",
    "azure-storage-blob>=12.16.0"
]

all = [
    "open-moe-trainer-lab[dev,gpu,distributed,visualization,benchmarking,cloud]"
]

[project.urls]
Homepage = "https://github.com/your-org/open-moe-trainer-lab"
Documentation = "https://open-moe-trainer-lab.readthedocs.io"
Repository = "https://github.com/your-org/open-moe-trainer-lab.git"
Issues = "https://github.com/your-org/open-moe-trainer-lab/issues"
Changelog = "https://github.com/your-org/open-moe-trainer-lab/blob/main/CHANGELOG.md"

[project.scripts]
moe-train = "moe_lab.cli:train"
moe-eval = "moe_lab.cli:evaluate"
moe-dashboard = "moe_lab.cli:dashboard"
moe-benchmark = "moe_lab.cli:benchmark"
moe-export = "moe_lab.cli:export"

[tool.setuptools.packages.find]
where = ["."]
include = ["moe_lab*"]
exclude = ["tests*"]

[tool.black]
line-length = 88
target-version = ['py39', 'py310', 'py311', 'py312']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
  | checkpoints
  | wandb
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["moe_lab"]
known_third_party = ["torch", "transformers", "datasets", "wandb", "numpy", "pandas"]
sections = ["FUTURE", "STDLIB", "THIRDPARTY", "FIRSTPARTY", "LOCALFOLDER"]
default_section = "THIRDPARTY"

[tool.pylint.messages_control]
disable = [
    "C0103",  # invalid-name
    "C0114",  # missing-module-docstring
    "C0115",  # missing-class-docstring
    "C0116",  # missing-function-docstring
    "R0903",  # too-few-public-methods
    "R0913",  # too-many-arguments
    "W0613",  # unused-argument
]

[tool.pylint.format]
max-line-length = 88

[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
ignore_missing_imports = true
show_error_codes = true
strict_optional = true

[[tool.mypy.overrides]]
module = "tests.*"
disallow_untyped_defs = false

[tool.pytest.ini_options]
minversion = "7.0"
addopts = [
    "--strict-markers",
    "--strict-config",
    "--verbose",
    "--tb=short",
    "--cov=moe_lab",
    "--cov-report=term-missing",
    "--cov-report=html:htmlcov",
    "--cov-report=xml"
]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "gpu: marks tests as requiring GPU",
    "distributed: marks tests as requiring distributed setup",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests"
]
filterwarnings = [
    "error",
    "ignore::UserWarning",
    "ignore::DeprecationWarning",
    "ignore::PendingDeprecationWarning"
]

[tool.coverage.run]
source = ["moe_lab"]
omit = [
    "*/tests/*",
    "*/test_*",
    "*/__init__.py",
    "*/setup.py"
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod"
]

[tool.bandit]
exclude_dirs = ["tests", "venv", ".venv"]
skips = ["B101", "B601"]

[tool.ruff]
target-version = "py39"
line-length = 88
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
]

[tool.ruff.per-file-ignores]
"__init__.py" = ["F401"]
"tests/**/*" = ["B011"]