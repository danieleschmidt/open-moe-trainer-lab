[MAIN]
# Python code to execute, usually for sys.path manipulation such as pygtk.pth.
init-hook='import sys; sys.path.append(".")'

# Files or directories to be skipped.
ignore=CVS,.git,__pycache__,wandb,checkpoints,data,logs

# Files or directories matching the regex patterns are skipped.
ignore-patterns=

# Add paths to the list of paths for import resolution.
init-hook='import sys; sys.path.append(".")'

[MESSAGES CONTROL]
# Disable the message, report, category or checker with the given id(s).
disable=
    C0103,  # invalid-name
    C0114,  # missing-module-docstring  
    C0115,  # missing-class-docstring
    C0116,  # missing-function-docstring
    R0903,  # too-few-public-methods
    R0913,  # too-many-arguments
    R0914,  # too-many-locals
    R0915,  # too-many-statements
    W0613,  # unused-argument
    W0622,  # redefined-builtin
    W0221,  # arguments-differ
    E1101,  # no-member (often false positive with PyTorch)
    E1102,  # not-callable (often false positive with PyTorch)

[REPORTS]
# Set the output format.
output-format=text

# Tells whether to display a full report or only the messages.
reports=no

# Python expression which should return a note less than 10 (10 is the highest note).
evaluation=10.0 - ((float(5 * error + warning + refactor + convention) / statement) * 10)

[REFACTORING]
# Maximum number of nested blocks for function/method body
max-nested-blocks=5

# Complete name of functions that never returns.
never-returning-functions=sys.exit

[BASIC]
# Good variable names which should always be accepted.
good-names=i,j,k,ex,Run,_,x,y,z,lr,id,fn,fp,tp,tn

# Bad variable names which should always be refused.
bad-names=foo,bar,baz,toto,tutu,tata

# Colon-delimited sets of names that determine each other's naming style when the name regexes allow several styles.
name-group=

# Include a hint for the correct naming format with invalid-name.
include-naming-hint=no

# Naming style matching correct function names.
function-naming-style=snake_case

# Regular expression matching correct function names.
function-rgx=[a-z_][a-z0-9_]{2,30}$

# Naming style matching correct variable names.
variable-naming-style=snake_case

# Regular expression matching correct variable names.
variable-rgx=[a-z_][a-z0-9_]{2,30}$

# Naming style matching correct constant names.
const-naming-style=UPPER_CASE

# Regular expression matching correct constant names.
const-rgx=(([A-Z_][A-Z0-9_]*)|(__.*__))$

# Naming style matching correct attribute names.
attr-naming-style=snake_case

# Regular expression matching correct attribute names.
attr-rgx=[a-z_][a-z0-9_]{2,30}$

# Naming style matching correct argument names.
argument-naming-style=snake_case

# Regular expression matching correct argument names.
argument-rgx=[a-z_][a-z0-9_]{2,30}$

# Naming style matching correct class attribute names.
class-attribute-naming-style=any

# Regular expression matching correct class attribute names.
class-attribute-rgx=([A-Za-z_][A-Za-z0-9_]{2,30}|(__.*__))$

# Naming style matching correct inline iteration names.
inlinevar-naming-style=any

# Regular expression matching correct inline iteration names.
inlinevar-rgx=[A-Za-z_][A-Za-z0-9_]*$

# Naming style matching correct class names.
class-naming-style=PascalCase

# Regular expression matching correct class names.
class-rgx=[A-Z_][a-zA-Z0-9]+$

# Naming style matching correct module names.
module-naming-style=snake_case

# Regular expression matching correct module names.
module-rgx=(([a-z_][a-z0-9_]*)|([A-Z][a-zA-Z0-9]+))$

# Naming style matching correct method names.
method-naming-style=snake_case

# Regular expression matching correct method names.
method-rgx=[a-z_][a-z0-9_]{2,30}$

[FORMAT]
# Maximum number of characters on a single line.
max-line-length=88

# Regexp for a line that is allowed to be longer than the limit.
ignore-long-lines=^\s*(# )?<?https?://\S+>?$

# Number of spaces of indent required inside a hanging or continued line.
indent-after-paren=4

# String used as indentation unit.
indent-string='    '

# Maximum number of lines in a module.
max-module-lines=1000

# List of optional constructs for which whitespace checking is disabled.
no-space-check=trailing-comma,dict-separator

[LOGGING]
# Format style used to check logging format string.
logging-format-style=old

# Logging modules to check that the string format arguments are in logging function parameter format.
logging-modules=logging

[MISCELLANEOUS]
# List of note tags to take in consideration, separated by a comma.
notes=FIXME,XXX,TODO

[SIMILARITIES]
# Minimum lines number of a similarity.
min-similarity-lines=4

# Ignore comments when computing similarities.
ignore-comments=yes

# Ignore docstrings when computing similarities.
ignore-docstrings=yes

# Ignore imports when computing similarities.
ignore-imports=no

[SPELLING]
# Spelling dictionary name.
spelling-dict=

# List of comma separated words that should not be checked.
spelling-ignore-words=

# A path to a file that contains private dictionary; one word per line.
spelling-private-dict-file=

# Tells whether to store unknown words to indicated private dictionary in --spelling-private-dict-file option instead of raising a message.
spelling-store-unknown-words=no

[TYPECHECK]
# List of decorators that produce context managers.
contextmanager-decorators=contextlib.contextmanager

# List of members which are set dynamically and missed by pylint inference system.
generated-members=

# Tells whether missing members accessed in mixin class should be ignored.
ignore-mixin-members=yes

# Tells whether to warn about missing members when the owner of the attribute is inferred to be None.
ignore-none=yes

# This flag controls whether pylint should warn about no-member and similar checks whenever an opaque object is returned when inferring.
ignore-on-opaque-inference=yes

# List of class names for which member attributes should not be checked.
ignored-classes=optparse.Values,thread._local,_thread._local

# List of module names for which member attributes should not be checked.
ignored-modules=

# Show a hint with the correct names when member name is not found.
missing-member-hint=yes

# The minimum edit distance a name should have to be considered a similar match for a missing member name.
missing-member-hint-distance=1

# The total number of similar names that should be taken in consideration when showing a hint for a missing member.
missing-member-max-choices=1

[VARIABLES]
# List of additional names supposed to be defined in builtins.
additional-builtins=

# Tells whether unused global variables should be treated as a violation.
allow-global-unused-variables=yes

# List of strings which can identify a callback function by name.
callbacks=cb_,_cb

# A regular expression matching the name of dummy variables.
dummy-variables-rgx=_+$|(_[a-zA-Z0-9_]*[a-zA-Z0-9]+?$)|dummy|^ignored_|^unused_

# Argument names that match this expression will be ignored.
ignored-argument-names=_.*|^ignored_|^unused_

# Tells whether we should check for unused import in __init__ files.
init-import=no

# List of qualified module names which can have objects that can redefine builtins.
redefining-builtins-modules=six.moves,past.builtins,future.builtins,builtins,io

[CLASSES]
# List of method names used to declare (i.e. assign) instance attributes.
defining-attr-methods=__init__,__new__,setUp,__post_init__

# List of member names, which should be excluded from the protected access warning.
exclude-protected=_asdict,_fields,_replace,_source,_make

# List of valid names for the first argument in a class method.
valid-classmethod-first-arg=cls

# List of valid names for the first argument in a metaclass class method.
valid-metaclass-classmethod-first-arg=cls

[DESIGN]
# Maximum number of arguments for function/method.
max-args=5

# Maximum number of attributes for a class.
max-attributes=7

# Maximum number of boolean expressions in an if statement.
max-bool-expr=5

# Maximum number of branch for function/method body.
max-branches=12

# Maximum number of locals for function/method body.
max-locals=15

# Maximum number of parents for a class.
max-parents=7

# Maximum number of public methods for a class.
max-public-methods=20

# Maximum number of return statements in function/method body.
max-returns=6

# Maximum number of statements in function/method body.
max-statements=50

# Minimum number of public methods for a class.
min-public-methods=2

[IMPORTS]
# Allow wildcard imports from modules that define __all__.
allow-wildcard-with-all=no

# Analyse import fallback blocks.
analyse-fallback-blocks=no

# Deprecated modules which should not be used.
deprecated-modules=optparse,tkinter.tix

# Create a graph of external dependencies in the given file.
ext-import-graph=

# Create a graph of every (i.e. internal and external) dependencies in the given file.
import-graph=

# Create a graph of internal dependencies in the given file.
int-import-graph=

# Force import order to recognize a module as part of the standard compatibility libraries.
known-standard-library=

# Force import order to recognize a module as part of a third party library.
known-third-party=enchant

# Couples of modules and preferred modules.
preferred-modules=

[EXCEPTIONS]
# Exceptions that will emit a warning when being caught.
overgeneral-exceptions=BaseException,Exception