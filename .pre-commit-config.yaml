repos:
  # Pre-commit hooks for code formatting and quality
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v4.5.0
    hooks:
      - id: trailing-whitespace
      - id: end-of-file-fixer
      - id: check-yaml
      - id: check-json
      - id: check-toml
      - id: check-xml
      - id: check-merge-conflict
      - id: check-case-conflict
      - id: check-docstring-first
      - id: check-executables-have-shebangs
      - id: check-shebang-scripts-are-executable
      - id: check-symlinks
      - id: check-vcs-permalinks
      - id: debug-statements
      - id: detect-private-key
      - id: fix-byte-order-marker
      - id: mixed-line-ending
      - id: name-tests-test
        args: ['--pytest-test-first']

  # Python code formatting
  - repo: https://github.com/psf/black
    rev: 23.12.1
    hooks:
      - id: black
        language_version: python3
        args: [--line-length=88]

  # Import sorting
  - repo: https://github.com/PyCQA/isort
    rev: 5.13.2
    hooks:
      - id: isort
        args: [--profile=black, --line-length=88]

  # Linting
  - repo: https://github.com/PyCQA/pylint
    rev: v3.0.3
    hooks:
      - id: pylint
        additional_dependencies: 
          - torch>=2.0.0
          - transformers>=4.30.0
          - numpy>=1.24.0
        args: [--rcfile=.pylintrc]

  # Type checking
  - repo: https://github.com/pre-commit/mirrors-mypy
    rev: v1.8.0
    hooks:
      - id: mypy
        additional_dependencies: 
          - torch>=2.0.0
          - transformers>=4.30.0
          - types-PyYAML
          - types-requests
        args: [--ignore-missing-imports]

  # Security scanning
  - repo: https://github.com/PyCQA/bandit
    rev: 1.7.5
    hooks:
      - id: bandit
        args: [-r, -f, json, -o, bandit-report.json]
        exclude: tests/

  # Dependency security scanning
  - repo: https://github.com/pyupio/safety
    rev: 2.3.5
    hooks:
      - id: safety
        args: [--json, --output, safety-report.json]

  # Dockerfile linting
  - repo: https://github.com/hadolint/hadolint
    rev: v2.12.0
    hooks:
      - id: hadolint-docker
        args: [--ignore, DL3008, --ignore, DL3009, --ignore, DL3015]

  # YAML linting
  - repo: https://github.com/adrienverge/yamllint
    rev: v1.33.0
    hooks:
      - id: yamllint
        args: [-d, '{extends: default, rules: {line-length: {max: 100}}}']

  # Shell script linting
  - repo: https://github.com/shellcheck-py/shellcheck-py
    rev: v0.9.0.6
    hooks:
      - id: shellcheck

  # Remove unused imports
  - repo: https://github.com/PyCQA/autoflake
    rev: v2.2.1
    hooks:
      - id: autoflake
        args:
          - --in-place
          - --remove-all-unused-imports
          - --remove-unused-variables
          - --remove-duplicate-keys
          - --ignore-init-module-imports

  # Upgrade Python syntax
  - repo: https://github.com/asottile/pyupgrade
    rev: v3.15.0
    hooks:
      - id: pyupgrade
        args: [--py39-plus]

  # Notebook formatting
  - repo: https://github.com/nbQA-dev/nbQA
    rev: 1.7.1
    hooks:
      - id: nbqa-black
        additional_dependencies: [black==23.12.1]
      - id: nbqa-isort
        additional_dependencies: [isort==5.13.2]
      - id: nbqa-pylint
        additional_dependencies: [pylint==3.0.3, torch>=2.0.0]

  # Secrets detection
  - repo: https://github.com/Yelp/detect-secrets
    rev: v1.4.0
    hooks:
      - id: detect-secrets
        args: ['--baseline', '.secrets.baseline']
        exclude: package.lock.json

  # Conventional commits
  - repo: https://github.com/compilerla/conventional-pre-commit
    rev: v3.0.0
    hooks:
      - id: conventional-pre-commit
        stages: [commit-msg]

  # Local hooks for project-specific checks
  - repo: local
    hooks:
      - id: pytest-check
        name: pytest-check
        entry: pytest
        language: system
        pass_filenames: false
        always_run: true
        args: [tests/, -x, --tb=short]
        stages: [push]

      - id: coverage-check
        name: coverage-check
        entry: bash -c 'coverage run -m pytest tests/ && coverage report --fail-under=80'
        language: system
        pass_filenames: false
        always_run: true
        stages: [push]

      - id: no-large-files
        name: no-large-files
        entry: bash -c 'find . -type f -size +10M -not -path "./.git/*" -not -path "./checkpoints/*" -not -path "./data/*" | grep -q . && echo "Large files found" && exit 1 || exit 0'
        language: system
        pass_filenames: false
        always_run: true

      - id: no-model-weights
        name: no-model-weights
        entry: bash -c 'find . -name "*.pth" -o -name "*.pt" -o -name "*.ckpt" -o -name "*.safetensors" | grep -v checkpoints | grep -q . && echo "Model weights found outside checkpoints directory" && exit 1 || exit 0'
        language: system
        pass_filenames: false
        always_run: true

ci:
  autofix_commit_msg: |
    [pre-commit.ci] auto fixes from pre-commit.com hooks

    for more information, see https://pre-commit.ci
  autofix_prs: true
  autoupdate_branch: ''
  autoupdate_commit_msg: '[pre-commit.ci] pre-commit autoupdate'
  autoupdate_schedule: weekly
  skip: [pytest-check, coverage-check]  # Skip expensive checks in CI
  submodules: false