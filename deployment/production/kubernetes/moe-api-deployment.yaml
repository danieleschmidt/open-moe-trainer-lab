apiVersion: apps/v1
kind: Deployment
metadata:
  name: moe-api
  namespace: moe-lab
  labels:
    app: moe-api
    component: api-server
    version: v1.0.0
spec:
  replicas: 3
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  selector:
    matchLabels:
      app: moe-api
  template:
    metadata:
      labels:
        app: moe-api
        component: api-server
        version: v1.0.0
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "8000"
        prometheus.io/path: "/metrics"
    spec:
      serviceAccountName: moe-lab-service-account
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        fsGroup: 1000
      containers:
      - name: moe-api
        image: moe-lab:latest
        imagePullPolicy: Always
        ports:
        - containerPort: 8000
          name: http
          protocol: TCP
        - containerPort: 8080
          name: metrics
          protocol: TCP
        env:
        - name: MODEL_CACHE_DIR
          value: "/app/models"
        - name: DATA_DIR
          value: "/app/data"
        - name: CHECKPOINT_DIR
          value: "/app/checkpoints"
        - name: LOG_LEVEL
          value: "INFO"
        - name: REDIS_URL
          valueFrom:
            secretKeyRef:
              name: moe-lab-secrets
              key: redis-url
        - name: POSTGRES_URL
          valueFrom:
            secretKeyRef:
              name: moe-lab-secrets
              key: postgres-url
        - name: PROMETHEUS_URL
          value: "http://prometheus:9090"
        - name: PYTHONUNBUFFERED
          value: "1"
        resources:
          requests:
            cpu: 500m
            memory: 2Gi
          limits:
            cpu: 2
            memory: 4Gi
        volumeMounts:
        - name: model-storage
          mountPath: /app/models
        - name: checkpoint-storage
          mountPath: /app/checkpoints
        - name: data-storage
          mountPath: /app/data
        - name: config-volume
          mountPath: /app/config
          readOnly: true
        livenessProbe:
          httpGet:
            path: /health
            port: 8000
          initialDelaySeconds: 60
          periodSeconds: 30
          timeoutSeconds: 10
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /ready
            port: 8000
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        startupProbe:
          httpGet:
            path: /health
            port: 8000
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 6
      volumes:
      - name: model-storage
        persistentVolumeClaim:
          claimName: moe-models-pvc
      - name: checkpoint-storage
        persistentVolumeClaim:
          claimName: moe-checkpoints-pvc
      - name: data-storage
        persistentVolumeClaim:
          claimName: moe-data-pvc
      - name: config-volume
        configMap:
          name: moe-lab-config
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - moe-api
              topologyKey: kubernetes.io/hostname
      tolerations:
      - key: "node.kubernetes.io/not-ready"
        operator: "Exists"
        effect: "NoExecute"
        tolerationSeconds: 300
      - key: "node.kubernetes.io/unreachable"
        operator: "Exists"
        effect: "NoExecute"
        tolerationSeconds: 300
---
apiVersion: v1
kind: Service
metadata:
  name: moe-api-service
  namespace: moe-lab
  labels:
    app: moe-api
    component: api-server
  annotations:
    prometheus.io/scrape: "true"
    prometheus.io/port: "8080"
spec:
  type: ClusterIP
  ports:
  - port: 8000
    targetPort: 8000
    protocol: TCP
    name: http
  - port: 8080
    targetPort: 8080
    protocol: TCP
    name: metrics
  selector:
    app: moe-api
  sessionAffinity: None
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: moe-lab-service-account
  namespace: moe-lab
  labels:
    app: moe-lab
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  namespace: moe-lab
  name: moe-lab-role
rules:
- apiGroups: [""]
  resources: ["pods", "services", "endpoints"]
  verbs: ["get", "list", "watch"]
- apiGroups: ["apps"]
  resources: ["deployments", "replicasets"]
  verbs: ["get", "list", "watch"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: moe-lab-role-binding
  namespace: moe-lab
subjects:
- kind: ServiceAccount
  name: moe-lab-service-account
  namespace: moe-lab
roleRef:
  kind: Role
  name: moe-lab-role
  apiGroup: rbac.authorization.k8s.io